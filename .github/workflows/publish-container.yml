# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build & Publish Containers

on:
  workflow_dispatch:

  push:
    branches:
      - next
      - main

env:
  USER: gecut

jobs:
  build:
    name: Build & Publish Containers
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # Services
          - name: kartbook/cdn
            path: ./packages/services/cdn
            context: ./packages/services/cdn
          - name: kartbook/card-api
            path: ./packages/services/card-api
            context: ./packages/services/card-api
          - name: kartbook/card-db
            path: ./packages/services/card-db
            context: .
          - name: kartbook/panel-api
            path: ./packages/services/panel-api
            context: .

          # Applications
          - name: kartbook/card-app
            path: ./packages/apps/card-app
            context: .
          - name: kartbook/panel-app
            path: ./packages/apps/panel-app
            context: .

          # Admin Panel
          - name: kartbook/admin
            path: ./packages/admin
            context: .

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: ‚§µÔ∏è Checkout repository
        uses: actions/checkout@v4.1.2

      - name: üèó Install cosign
        if: ${{ github.event_name != 'pull_request' }}
        uses: sigstore/cosign-installer@v3.5.0

      - name: üèó Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: üèó Cache Docker Layers
        uses: actions/cache@v4.0.2
        with:
          path: /tmp/.buildx-cache
          key: container/${{ matrix.name }}

      - name: üèó Log into ghcr.io registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{env.USER}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: üèó Log into registry.hamdocker.ir registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.1.0
        with:
          registry: registry.hamdocker.ir
          username: ${{env.USER}}
          password: P61agRtnHDOisaBrA1!

      - name: üèó Extract metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          images: |
            name=ghcr.io/${{env.USER}}/${{matrix.name}},enable=true
            name=registry.hamdocker.ir/${{env.USER}}/${{matrix.name}},enable=true
            name=docker.io/${{env.USER}}/${{matrix.name}},enable=false
          tags: |
            type=semver,enable=true,pattern={{major}}
            type=semver,enable=true,pattern={{major}}.{{minor}}
            type=semver,enable=true,pattern={{version}}
            type=ref,enable=true,event=branch
            type=raw,enable={{is_default_branch}},value=latest
          labels: |
            org.opencontainers.image.title="gecut/${{matrix.name}}"
            org.opencontainers.image.vendor="Gecut"
            org.opencontainers.image.documentation="https://github.com/gecut/hybrid-ui"
            org.opencontainers.image.authors="S. MohammadMahdi Zamanian <dev@mm25zamanain.ir> (https://mm25zamanian.ir)"

      - name: üöÄ Build and push container image
        id: build_and_push
        uses: docker/build-push-action@v5.3.0
        with:
          context: ${{matrix.context}}
          file: ${{matrix.path}}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  deploy:
    name: Deploy Container On Darkube
    container: hamravesh/darkube-cli:v1.1
    needs: build
    runs-on: ubuntu-latest
    if: false

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: CARD_API
          - name: CARD_DB
          - name: CARD_APP
          - name: ADMIN

    steps:
      - name: darkube-cli deploy
        run: darkube deploy --token ${DARKUBE_DEPLOY_TOKEN} --app-id ${DARKUBE_APP_ID} --image-tag latest --job-id ${GITHUB_RUN_ID}
        env:
          DARKUBE_DEPLOY_TOKEN: ${{ secrets[format('DARKUBE_{0}_DEPLOY_TOKEN', matrix.name)] }}
          DARKUBE_APP_ID: ${{ secrets[format('DARKUBE_{0}_APP_ID', matrix.name)] }}

  artillery:
    runs-on: ubuntu-latest
    needs: deploy
    if: false

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Card APP
            script: ./tests/card.app.artillery.yml
          - name: Card API
            script: ./tests/card.api.artillery.yml

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.2

      - name: Sleep for 30 seconds
        run: sleep 30s
        shell: bash

      - name: Execute load tests
        uses: artilleryio/action-cli@v1
        with:
          command: run ${{matrix.script}} --record --key ${{secrets.ARTILLERY_KEY}}
